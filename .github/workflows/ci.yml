name: CI

on: [pull_request]

jobs:
  format-check:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Create virtual environment
      run: python -m venv tilelang_ci

    - name: Activate virtual environment and install dependencies
      run: |
        source tilelang_ci/bin/activate
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi

    - name: Update submodules recursively
      run: git submodule update --init --recursive

    - name: Run format check
      run: |
        source tilelang_ci/bin/activate
        ./format.sh

  build-test:
    runs-on: self-hosted
    needs: format-check

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Create virtual environment
      run: python -m venv tilelang_ci

    - name: Activate virtual environment and install dependencies
      run: |
        source tilelang_ci/bin/activate
        python -m pip install --upgrade pip
        if [ -f requirements-test.txt ]; then python -m pip install -r requirements-test.txt; fi

    - name: Install project in wheel mode
      run: |
        source tilelang_ci/bin/activate
        python -m pip install .

    - name: Run tests
      run: |
        source tilelang_ci/bin/activate
        cd testing/python
        export TILELANG_CLEAR_CACHE=1
        python -m pytest
    
  performance-test:
    if: |
      (contains(github.event.comment.body, '/performance-report') || contains(github.event.comment.body, '/perf'))&&
      github.event.issue.pull_request
    permissions:
      pull-requests: write
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Create virtual environment
        run: python -m venv tll

      - name: Install dependencies
        run: |
          source tll/bin/activate
          pip install -r requirements-test.txt
          pip install .

      - name: Build original version
        run: |
          git clean -dxf
          git checkout main
          python -m venv tl
          source tl/bin/activate
          pip install -r requirements-test.txt
          pip install .

      - name: Run performance test
        id: perf-test
        run: |
          source tl/bin/activate
          git checkout refs/remotes/pull/274/merge
          TEST_RESULTS=$(python ./maint/scripts/ci_performance.py)
          echo "PERF_RESULTS=$TEST_RESULTS" >> $GITHUB_ENV

      - name: Post Test Results to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT_BODY="ðŸ“Š â€‹**Performance Test Results** (triggered by @${{ github.event.comment.user.login }}): \n\n${{ env.PERF_RESULTS }}"
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments" \
            -d "{\"body\": \"$COMMENT_BODY\"}"
